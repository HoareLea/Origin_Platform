version: '3'

services:
  neo4j:
    image: neo4j:4.3.7
    hostname: ${NEO4j_NAME}
    container_name: ${NEO4j_NAME}
    ports:
      - ${NEO4j_HTTP}:7474
      - ${NEO4j_HTTPS}:7473
      - ${NEO4j_BOLT}:7687
    environment:
      NEO4J_AUTH: ${NEO4J_USER}/${NEO4J_PASSWORD}
      NEO4J_dbms_unmanaged__extension__classes: org.neo4j.graphql=/graphql
      NEO4J_dbms_memory_heap_max__size: 1G
      NEO4J_dbms_logs_query_threshold: 0s
      NEO4J_dbms_logs_query_enabled: "INFO"
      NEO4J_cypher_lenient__create__relationship: "true"
      NEO4J_apoc_trigger_enabled: "true"
      NEO4J_dbms_security_procedures_unrestricted: "apoc.*,algo.*"
      NEO4J_apoc_import_file_enabled: "true"
      NEO4J_apoc_export_file_enabled: "true"
      NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"
    volumes:
      - ./Dependents/neo4j/plugins:/plugins
      - ./Dependents/${NEO4j_NAME}/data:/data
      - ./Dependents/${NEO4j_NAME}/conf:/config
    restart: always

  api:
    image: willhl2/origin-api:latest
    hostname: ${GQL_NAME}
    ports:
      - ${GQL_PORT}:4002
    container_name: ${GQL_NAME}
    environment:
      - NEO4J_URI=bolt://${NEO4j_NAME}:7687
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - GRAPHQL_LISTEN_PORT=4002
      - GRAPHQL_URI=http://${GQL_NAME}:4002/graphql
      - SCHEMA_ROOT=${SCHEMA_ROOT}
      - AZURE_CREDENTIALS_TENANTID=${AZURE_CREDENTIALS_TENANTID}
      - AZURE_CREDENTIALS_CLIENTID=${AZURE_CREDENTIALS_CLIENTID}
      - AZURE_CREDENTIALS_CLIENT_SECRET=${AZURE_CREDENTIALS_CLIENT_SECRET}
      - AZURE_CREDENTIALS_AUDIENCE=${AZURE_CREDENTIALS_AUDIENCE}
      - AZURE_METADATA_AUTHORITY=${AZURE_METADATA_AUTHORITY}
      - AZURE_METADATA_DISCOVERY=${AZURE_METADATA_DISCOVERY}
      - AZURE_METADATA_VERSION=${AZURE_METADATA_VERSION}
      - AZURE_SETTINGS_VALIDATE_ISSUER=${AZURE_SETTINGS_VALIDATE_ISSUER}
      - AZURE_SETTINGS_PASS_REQUEST_TO_CALLBACK=${AZURE_SETTINGS_PASS_REQUEST_TO_CALLBACK}
      - AZURE_SETTINGS_LOGGING_LEVEL=${AZURE_SETTINGS_LOGGING_LEVEL}
      - SUPER_ADMIN_GROUP_ID=${SUPER_ADMIN_GROUP_ID}
      - SENTRY_DSN=${SENTRY_DSN}
      - SENTRY_AUTH_TOKEN=${SENTRY_AUTH_TOKEN}      
      - SENTRY_RELEASE=${SENTRY_RELEASE}
      - NODE_ENV=${NODE_ENV}
    volumes:
      - ./schema:/schema
    links:
    - neo4j
    depends_on:
    - neo4j
    restart: always

volumes:
  schema: